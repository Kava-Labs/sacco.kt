buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'


repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Crypto
    implementation "org.bitcoinj:bitcoinj-core:0.15.1"
    implementation "com.github.komputing:KEthereum:0.74.9"

    // Serialization
    implementation "com.fasterxml.jackson.core:jackson-databind:2.0.1"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version"

    // --------------------------
    // --- Test dependencies
    // --------------------------

    testImplementation "junit:junit:4.12"
    testImplementation "io.mockk:mockk:1.9.3"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// ----------------------
// --- Publishing
// ----------------------

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = javadoc.destinationDir

    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/commercionetwork/sacco.kt/tree/master/src/main/kotlin"
        suffix = "#L"
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = "sacco.kt"
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Sacco.kt'
                description = 'A cryptographic library that allows easy creation, signing and sending of Cosmos Network transactions'
                url = 'https://github.com/commercionetwork/sacco.kt'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
}